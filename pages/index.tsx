import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";
import Cart from "../cmps/Cart/Cart";
import CheckOut from "../cmps/CheckOut/CheckOut";
import Header from "../cmps/Header/Header";
import Store from "../cmps/Store/Store";
import { onGetItems } from "../features/cart/cartSlice";
import { removeAllItems } from "../utills/utills";
import { useAppDispatch } from "../app/hooks";
import Footer from "../cmps/Footer/Footer";
import PaymentModal from "../cmps/OrdersModal/PaymentModal";
import { fetchProducts } from "../utills/fetch-requests";
import { useUser } from "@auth0/nextjs-auth0";
import { products } from "../cmps/Store/store-products";
const Home: NextPage = ({ products }: any) => {
  const router = useRouter();
  const dispatch = useAppDispatch();
  const [ordersModal, setOrdersModal] = useState(false);
  const { user, error, isLoading } = useUser();

  // const checkStatus = async () => {
  //   if (router.query.status && router.query.status === "success") {
  //     await removeAllItems();
  //     await dispatch(onGetItems);
  //     setOrdersModal(true);
  //   }
  // };
  const checkStatus = useCallback(async () => {
    if (router.query.status && router.query.status === "success") {
      await removeAllItems();
      await dispatch(onGetItems);
      setOrdersModal(true);
    }
  }, [router.query, dispatch]);

  useEffect(() => {
    checkStatus();
    console.log("i run");
  }, [checkStatus]);

  return (
    <div>
      <Head>
        <title>Next Sports and Camp</title>
        <meta name="description" content="Generated by create Yaniv Shabi" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <Store products={products} />
        <Cart />
        <CheckOut />
        {user && ordersModal && (
          <PaymentModal setOrdersModal={setOrdersModal} />
        )}
      </main>
      <Footer />
    </div>
  );
};

export const getStaticProps = async () => {
  try {
    let data = await fetchProducts();
    return {
      props: {
        products: data,
      },
    };
  } catch (error) {
    console.log(error || "Couldnt fetch");

    return {
      props: {
        products: products,
      },
    };
  }
};
export default Home;
